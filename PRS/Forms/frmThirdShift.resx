<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABJVJREFUOE9tlAtMU1cYx69RZpxTB+okmrmxqdFF3ZzRaWSbzgfBByhveYlAgQIt
        FBTcMEsmmE3iQKdOI4Kt0FKgMNT4YMYl6HBU6gsVsrEYkeEDH0BlUqjw22npZpT9k5N7bvKd3/2f73El
        /lf93DO30tDWQPn1CgpMGtSXjlD1exWNjxppt7Q74gZrELDhYQOHjAWkVKSzPj+CjRo5MYVKotQJ+OWF
        4VcQgrJyE/rrJZh7zI5TL/QS0NhiJKFURZxOhUK3mSR9GgnFKeI9CZlWKZaCyKJEQjTR+KnDkVXKeWrp
        dJwe0H/A2r9qSa5IQ6lLQ1W6hUT9JuTFKmKLkojQygnWRBKmjSFcF0uITkZIkQzvw+tJPKmiu7fLQXEA
        G9puCmfJJGnTUZZsJkGfQqzW5kqB35FwovWJZFZlE1Acgb9+A74l4fiI5VsaxjLNOmJOJGCxPhsA9osC
        5ImcyYuSSS5NJ97mynZFnRJfTSgyvYI7j1vswUd+07G0ZB3+lRvxPboBH7G8fwrD0+DPsT+O22Ok1qd3
        UYkC2HKm0KcSI0AynULAwlmbF8Qj82N7oE1Z53KYU7wY99KVfFLiwYKSFSwqW8l88Uw6m4b1eS9SQ1sj
        QaKaSXrhTq9ywMLwzg/mVtttBwoyqrOQtklI3w9DynFC2j2CoXvHMWzvW0i7RvFe/kzum+8jld+oYKNa
        br+qXDgM1kYTWZzwkjNDvYFZP8zCr8yHgPIA1h8NZXmZF84F7+CqnoZLvhtD9oyh7q4J6bBJjUyjIKks
        jdgSFdOzZmNqvupA2Vq837EbLO/jQUzUTcNNNxOngy7U3jYiqcUUxOtSCVJHMX7LRKRECYOp3HFkQJ3d
        Ztq7OrBYuvn72TN6uq086GjD65Qfs47O48PKBYwrnIyxuQ6p+lY1PnnBjFS+iaQU+flyBKO3juRayzUH
        Dmqaa5l0aCrzDJ/jcWItXj/7s/zUKhae/owlZzxYdHoJHxg+5krrZaTGh41IkSLZ8qFI6QK6bQzSjuFI
        X0lor+gcSNsUmZhRNodFZxbjUe3Jugu+BNcFE3gxkFU1awj8JYgn5nakLtHlc3fOR4oV0C2jkbY7I+WO
        FVUU+0xJfLXegYQfTXm4V39KaF0o0fWRxN2MIe5GNIGXA8iqzcRqtQ5Myr7aAyJ3Q5DSXkf6TgB3uTB8
        nytOBybgcmgyhsZjdHX2kFHzDd7G1cTfiCX9VjJfN6eR0ZJK3NUofv3zvP2jdqClz8Lc/QvFtYXLbBcB
        HMtre11xPvguroVTmKqfzYqTq1l2dgVR9RtIbVKw/d5W9rR/S1ZnOjuN2fRb7LyX/zbLC9cgZQho7mi7
        Q+c8N94XLTG7cj7uVUvwOr+W2OvRwl0KuR2Z5Ft3svtCDtbO5w7CK0CbvtB7MjRnlJiGETjtH8/b2hnM
        LJ+H++mleJ5bQ9jVEOKbZKQ3qdh9KZeejhcwmwYB+/v7KG00EHA8jCmHP+KNgxNw1kzCrWw6C0+6E1UT
        QbZpB+eaztPXPbjpBwH/VV/fcx6I2bSNk7H5Ihfv1HG59QpPOh/T22t1RL0q+Acg1YYB9U5j9QAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>